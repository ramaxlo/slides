UNIX Philosophy
Apr 28 2017

Ramax Lo

* Disclaimer

There is already a [[https://en.wikipedia.org/wiki/Unix_philosophy][Wiki page]] on UNIX Philosophy.

The following is according to my understanding of UNIX/Linux.
Just personal opinions. Might not be correct.
Use it with caution.

* What is UNIX Philosophy?

- The way of human interacting with computer
- Thoughts behind UNIX design and how programs are constructed to support UNIX functionalities

* Philosophy 1

* Everything Is File

*File* is the concept to model I/O resources managed by UNIX
eg. device, socket, console, etc.

Each file is represented by a file descriptor for a given process

Basic operations:
`read`, `write`, `close`

And your program is logic interacting with files

* Philosophy 2

* Do One Thing and Do It Well (DOTADIW)

Each program does only one thing

Keep the logic simple and straitforward. It tends to be bug-free when it's simple.

Small programs

 ls, sed, cat, more, sort, uniq, cut, head, tail, wc, grep, find, ...

* Philosophy 3

* Make program act like a filter

Each running program has 3 fds opened by OS:
stdin(0), stdout(1), stderr(2)

The easy way to interact with outside world:
Read input from stdin, write output to stdout

Program only outputs processed result and nothing else.

* Philosophy 4

* Combination

Combine basic blocks to perform sophisticated tasks

Use *pipe* to chain stdout of one program to stdin of another

* Basic usage

- Find SD device

  ls /dev | grep mmc

- List size of folders in ascending order

  du --max-depth=1 | sort -k 1n

* More Complex

- Find number of handlers in MS

  ps ax | grep handler | grep -v grep | wc -l

- Find which IPs CV forwarders connect to

  sudo netstat -na | grep 5555 | awk ‘{print $5}’ | sort | uniq

- Find the block number of MTD named ‘App’

  cat /proc/mtd | grep App | cut -d ‘:’ -f 1 | sed -e ‘/^mtd//’

* Another Way

Use named pipe

See demo

* Does it remind you of something?

* Channel

.play unix_phil/ch_test.go /func main/,/^}/
.code unix_phil/ch_test.go /func writer/,/^}/

* 有 87 分像

Pipe is Channel in OS level

or

Channel is Pipe in language level?

* Summary

* Summary

One sentence to describe UNIX philosophy
以簡馭繁

It also applies to software engineering.

It's easy to understand, but hard to apply in practice (知易行難)
People (including me) tend to make things complicated instead of coming out simple, generic patterns.

Complicated -> bug-prone

* How to overcome?
Read code. Lots of code.

Learn how those masters think about software architecture.

Thanks to Open Source, now you have code in your hands.

* References

[[https://en.wikipedia.org/wiki/Unix_philosophy][_UNIX_Philosophy_]], Wikipedia

[[https://www.cyut.edu.tw/~ckhung/a/c013.php#combination][_組合的力量_]], 洪朝貴, 2001

[[http://yarchive.net/comp/linux/everything_is_file.html][_Linus_on_file_]], LKML Archive
#Linus criticized POSIX signal & timer API is bad because it doesn't do it in UNIX way.
#He prefered `signalfd` over `sigaction` and `timerfd_create` over `timer_create`, so that we can handle them just like regular file descriptors.
#Linus emphasizes "Everything is a file descriptor, or a process".
